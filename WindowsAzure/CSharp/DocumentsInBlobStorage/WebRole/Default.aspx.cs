using Aspose.Words;
using Aspose.Words.Saving;
using System.IO;
using Microsoft.Samples.ServiceHosting.StorageClient;
using System;
using System.Drawing;

namespace WebRole
{
    /// <summary>
    /// This sample shows how to store documents generated by Aspose.Words for .NET
    /// into Windows Azure Storage as Blobs.
    ///
    /// This project uses StorageClient.dll from the Windows Azure SDK Samples
    /// to communicate with Windows Azure Storage.
    /// </summary>
    public partial class _Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                DisplayStorageContents();
            }
        }

        protected void GenerateButton_Click(object sender, EventArgs e)
        {
            // Generate a test document using Aspose.Words.
            Document doc = GenerateDocumentFor(NameTextBox.Text);

            // Save the document to a memory stream.
            MemoryStream stream = new MemoryStream();
            SaveFormat saveFormat = FileFormatUtil.ExtensionToSaveFormat(DstFormatDropDownList.SelectedValue);
            SaveOutputParameters saveParams = doc.Save(stream, saveFormat);
            
            // Create a blob from the memory stream.
            BlobContents contents = new BlobContents(stream.ToArray());
            BlobProperties props = new BlobProperties(NameTextBox.Text + "." + DstFormatDropDownList.SelectedValue.ToLower());
            // Aspose.Words conveniently gives us the Content-Type of the saved document and we specify this as 
            // a content type for the blob. It is not required, but makes download from the Blog state URL easy.
            props.ContentType = saveParams.ContentType;

            // Store the blob into Windows Azure storage.
            BlobContainer container = GetContainer();
            if (!container.CreateBlob(props, contents, true))
                throw new Exception("Saving document to blob storage failed.");

            DisplayStorageContents();
        }

        protected void ClearStorageButton_Click(object sender, EventArgs e)
        {
            BlobContainer container = GetContainer();
            container.DeleteContainer();
            DisplayStorageContents();
        }

        /// <summary>
        /// Generates a simple test document using Aspose.Words.
        /// </summary>
        private static Document GenerateDocumentFor(string name)
        {
            // Let's build a document completely from scratch for this example.
            DocumentBuilder builder = new DocumentBuilder();
            builder.Write("Hello ");
            builder.Font.Color = Color.Red;
            builder.Write(name);
            builder.Font.ClearFormatting();
            builder.Writeln("!");
            return builder.Document;
        }

        private void DisplayStorageContents()
        {
            BlobContainer container = GetContainer();
            BlobGridView.DataSource = container.ListBlobs(null, false);
            BlobGridView.DataBind();
        }

        /// <summary>
        /// Gets or creates the Windows Azure Storage blob container we use in this demo.
        /// </summary>
        private static BlobContainer GetContainer()
        {
            // These constants are for running in the Development Fabric.
            Uri uri = new Uri("http://127.0.0.1:10000");
            const string accountName = "devstoreaccount1";
            const string sharedKey = "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==";

            BlobStorage storage = BlobStorage.Create(uri, null, accountName, sharedKey);

            const string containerName = "loadsavedocumenttoblobstorage";
            BlobContainer container = storage.GetBlobContainer(containerName);
            container.CreateContainer(null, ContainerAccessControl.Public);

            return container;
        }

        static _Default()
        {
            // Uncomment this code and embed your license file as a resource in this project and this code 
            // will find and activate the license. Aspose.Wods licensing needs to execute only once
            // before any Document instance is created and a static ctor is a good place.
            //
            // Aspose.Words.License l = new Aspose.Words.License();
            // l.SetLicense("Aspose.Words.lic");
        }
    }
}